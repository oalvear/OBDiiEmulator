/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.upv.grc.gui;

import es.upv.grc.bluetooth.BluetoothPCConnection;
import es.upv.grc.bluetooth.GPSBTEmulator;
import es.upv.grc.gui.utils.Joystick;
import es.upv.grc.gui.utils.JoystickHandler;
import es.upv.grc.obdemulator.connection.BluetoothConnection;
import es.upv.grc.obdemulator.connection.BluetoothConnectionHandler;
import es.upv.grc.obdemulator.elm.ECUVehicle;
import es.upv.grc.obdemulator.engine.OBDClientHandler;
import es.upv.grc.obdemulator.engine.OBDGenerator;
import es.upv.grc.obdemulator.engine.OBDSimulationGenerator;
import es.upv.grc.obdemulator.engine.OBDVehicle;
import java.awt.Point;
import java.awt.Toolkit;
import java.util.Date;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Usuario
 */
public class MainWindow extends javax.swing.JFrame implements BluetoothConnectionHandler, OBDClientHandler, JoystickHandler {

    /**
     * Creates new form MainWindow
     */
    Parameters p;

    ECUVehicle data;

    OBDGenerator sEngine;
    BluetoothConnection obdBluetooth;
    BluetoothConnection gspBluetooth;

    Thread threadBluetooth;
    Thread threadData;
    Thread threadGsp;
    Thread tDate;
    boolean isBtRunning = false;
    boolean isBtConnected = false;
    int acceleration = 0;

    int rotation = 0;

    double time1 = 0;

    Point position = new Point();

    double latitude = 0.0f, longitude = 0.0f, altitude = 0.0f, bearing = 0.0f;

    String request = "", response = "", log = "";
    private static final int MAX_LOG = 10000;

    String date = "";

    public MainWindow() {
        initComponents();
        data = new ECUVehicle();
        sEngine = new OBDSimulationGenerator(this, data);
        obdBluetooth = new BluetoothPCConnection(data, this);
        gspBluetooth = new GPSBTEmulator(data, this);
        mapView.setZoom(20);
        latitude = (float)39.48056;
        longitude = (float)-0.34713;
        mapView.setDisplayPositionByLatLon(latitude, longitude, 15);
        setIconImage();
        startTime();
    }

    private void startTime() {
        tDate = new Thread(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    try {
                        Date d = new Date();
                        date = d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds();
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                    }
                }
            }

        });
        tDate.start();
    }

    private void setIconImage() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(Joystick.class.getResource("images/logo.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtRPM = new javax.swing.JLabel();
        txtSpeed = new javax.swing.JLabel();
        btnStart = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pgsThrottle = new javax.swing.JProgressBar();
        jLabel9 = new javax.swing.JLabel();
        pgsLoad = new javax.swing.JProgressBar();
        jLabel10 = new javax.swing.JLabel();
        pgsBrake = new javax.swing.JProgressBar();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtTime = new javax.swing.JLabel();
        txtGear = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        mapView = new org.openstreetmap.gui.jmapviewer.JMapViewer();
        txtLat = new javax.swing.JLabel();
        txtLon = new javax.swing.JLabel();
        jMove = new es.upv.grc.gui.utils.Joystick(100, 100,this);
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtAltitude = new javax.swing.JLabel();
        txtBearing = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtRequest = new javax.swing.JTextArea();
        btnConnect = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtResponse = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnConfiguration = new javax.swing.JMenu();
        mnObdPids = new javax.swing.JMenuItem();
        mnHelp = new javax.swing.JMenu();
        mnAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OBD II Emulator");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setForeground(new java.awt.Color(255, 255, 255));
        setIconImage(getIconImage());
        setName("mainFrame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1024, 700));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Parameters Simulator"));
        jPanel1.setAutoscrolls(true);

        txtRPM.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtRPM.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtRPM.setText("0");

        txtSpeed.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtSpeed.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtSpeed.setText("0");

        btnStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/upv/grc/gui/utils/images/play.png"))); // NOI18N
        btnStart.setAlignmentY(0.0F);
        btnStart.setBorder(null);
        btnStart.setBorderPainted(false);
        btnStart.setContentAreaFilled(false);
        btnStart.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnStart.setIconTextGap(0);
        btnStart.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnStart.setMaximumSize(new java.awt.Dimension(50, 50));
        btnStart.setMinimumSize(new java.awt.Dimension(50, 50));
        btnStart.setPreferredSize(new java.awt.Dimension(50, 50));
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        jLabel1.setText("Km/h");

        jLabel2.setText("RPM");

        jLabel3.setText("Speed");

        jLabel4.setText("Engine RPM");

        jLabel7.setText("Load Engine");

        pgsThrottle.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pgsThrottle.setFocusTraversalPolicyProvider(true);

        jLabel9.setText("Throttle Position");

        pgsLoad.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pgsLoad.setFocusTraversalPolicyProvider(true);

        jLabel10.setText("Brake Position");

        pgsBrake.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pgsBrake.setFocusTraversalPolicyProvider(true);

        jLabel11.setText("Time");

        jLabel12.setText("Gear");

        txtTime.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtTime.setText("0");

        txtGear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtGear.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtGear.setText("1");

        jLabel8.setText("seg");

        mapView.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtLat.setText("0.0");

        txtLon.setText("0.0");

        jMove.setMaximumSize(new java.awt.Dimension(100, 100));
        jMove.setMinimumSize(new java.awt.Dimension(100, 100));
        jMove.setName(""); // NOI18N

        javax.swing.GroupLayout jMoveLayout = new javax.swing.GroupLayout(jMove);
        jMove.setLayout(jMoveLayout);
        jMoveLayout.setHorizontalGroup(
            jMoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jMoveLayout.setVerticalGroup(
            jMoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel14.setText("Latitude");

        jLabel15.setText("Longitude");

        jLabel17.setText("Altitude");

        jLabel18.setText("Bearing");

        txtAltitude.setText("0.0");

        txtBearing.setText("0.0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(mapView, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jMove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnStart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtRPM, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel8)))
                                    .addComponent(txtGear, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pgsLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pgsThrottle, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pgsBrake, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtLat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtAltitude, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtLon, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtBearing, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel15)
                            .addComponent(jLabel10)
                            .addComponent(jLabel14))
                        .addGap(0, 139, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel3, jLabel4, jLabel7, jLabel9});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSpeed)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtRPM)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtTime)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtGear))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(pgsLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(pgsThrottle, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(pgsBrake, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtLat)
                    .addComponent(jLabel17)
                    .addComponent(txtAltitude))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtLon)
                    .addComponent(jLabel18)
                    .addComponent(txtBearing))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addComponent(jMove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(158, 158, 158))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(mapView, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Bluethooth Emulator"));
        jPanel2.setAutoscrolls(true);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtRequest.setEditable(false);
        txtRequest.setColumns(20);
        txtRequest.setRows(5);
        txtRequest.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setViewportView(txtRequest);

        btnConnect.setText("CONNECT");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtResponse.setEditable(false);
        txtResponse.setColumns(20);
        txtResponse.setRows(5);
        txtResponse.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane2.setViewportView(txtResponse);

        jLabel5.setText("Request:");

        jLabel6.setText("Response:");

        jScrollPane3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtLog.setEditable(false);
        txtLog.setColumns(20);
        txtLog.setRows(5);
        txtLog.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtLog.setMinimumSize(new java.awt.Dimension(4, 10));
        jScrollPane3.setViewportView(txtLog);

        jLabel13.setText("Logs:");

        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(btnConnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnClear, btnConnect});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane1, jScrollPane2});

        mnConfiguration.setText("Configuration");

        mnObdPids.setText("OBDII PIDs");
        mnObdPids.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnObdPidsActionPerformed(evt);
            }
        });
        mnConfiguration.add(mnObdPids);

        jMenuBar1.add(mnConfiguration);

        mnHelp.setText("Help");

        mnAbout.setText("About");
        mnHelp.add(mnAbout);

        jMenuBar1.add(mnHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("Simulator");

        setSize(new java.awt.Dimension(1076, 676));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        if (!isBtConnected) {
            
            threadBluetooth = new Thread(obdBluetooth);
            threadGsp = new Thread(gspBluetooth);

            threadBluetooth.start();
            try {Thread.sleep(1000);} catch (Exception e){;}
            threadGsp.start();
            
            this.btnConnect.setText("DISCONNECT");
        } else {
            obdBluetooth.terminate();
            gspBluetooth.terminate();
            //threadBluetooth = null;
            //threadGsp = null;
            this.btnConnect.setText("CONNECT");
        }
        isBtConnected = !isBtConnected;
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        if (!isBtRunning) {
            threadData = new Thread(sEngine);
            threadData.start();
            btnStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/upv/grc/gui/utils/images/stop.png"))); // NOI18N
        } else {
            sEngine.terminate();
            threadData = null;
            btnStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/upv/grc/gui/utils/images/play.png"))); // NOI18N
        }
        isBtRunning = !isBtRunning;
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        request = "";
        response = "";
        log = "";
        this.txtRequest.setText("");
        this.txtResponse.setText("");
        this.txtLog.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void mnObdPidsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnObdPidsActionPerformed
        p = new Parameters(data);
        p.setVisible(true);
    }//GEN-LAST:event_mnObdPidsActionPerformed

    @Override
    public void moveEvent(Point position) {
        int mx = position.x;
        int my = position.y;

        if (my > 0) {
            pgsThrottle.setValue(my);
            pgsBrake.setValue(0);
        } else {
            pgsBrake.setValue(-my);
            pgsThrottle.setValue(0);
        }
        acceleration = my * 2;
        rotation = -mx;
        //mapView.setRotation(rotation * Math.PI/180);
    }

    @Override
    public void updateRequest(String msg) {
        request = date + "  " + msg + '\n' + request;
        this.txtRequest.setText(request);
        if (request.length() > MainWindow.MAX_LOG) {
            request = "";
        }
    }

    @Override
    public void updateResponse(String msg) {
        response = date + "  " + msg + '\n' + response;
        this.txtResponse.setText(response);
        if (response.length() > MainWindow.MAX_LOG) {
            response = "";
        }
    }

    @Override
    public void updateLog(String msg) {
        log = date + "  " + msg + '\n' + log;
        this.txtLog.setText(log);
        if (log.length() > MainWindow.MAX_LOG) {
            log = "";
        }

    }

    @Override
    public void updateData(OBDVehicle vehicle) {
        this.txtSpeed.setText(String.valueOf(vehicle.getSpeed()));
        this.txtRPM.setText(String.valueOf(vehicle.getRpm()));
        this.pgsLoad.setValue(vehicle.getLoad());
        this.txtGear.setText(String.valueOf(vehicle.getGear()));
        this.txtTime.setText(String.valueOf((long) vehicle.getTime()));
//        double move = -vehicle.getSpeed() * time2 / 3.6;

//        Coordinate coor = mapView.getNextCoordinate(move, vehicle.getDireccion());
//        latitude = (float) coor.getLat();
//        longitude = (float) coor.getLon();

        //geoPosition = GeoUtils.getPosition(latitude, longitude, -vehicle.getDireccion(), Math.abs(move));
        latitude = data.getLatitude();
        longitude = data.getLongitude();
        altitude = data.getAltitude();
        bearing = data.getBearing();
        longitude = data.getLongitude();
        this.txtLat.setText(String.valueOf(latitude));
        this.txtLon.setText(String.valueOf(longitude));
        this.txtAltitude.setText(String.valueOf(altitude));
        this.txtBearing.setText(String.valueOf(bearing));
        mapView.setDisplayPositionByLatLon(latitude, longitude, mapView.getZoom());
        time1 = ((long) vehicle.getTime());
        mapView.setRotation(Math.toRadians(vehicle.getDireccion()));
        //mapView.setRotation(vehicle.getDireccion() * Math.PI / 180);
    }

    @Override
    public int getAcceleration() {
        return acceleration;
    }

    @Override
    public double getLatitude() {
        return latitude;
    }

    @Override
    public double getLongitude() {
        return longitude;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
            //} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } //</editor-fold>
        catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } //</editor-fold>
        catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private es.upv.grc.gui.utils.Joystick jMove;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private org.openstreetmap.gui.jmapviewer.JMapViewer mapView;
    private javax.swing.JMenuItem mnAbout;
    private javax.swing.JMenu mnConfiguration;
    private javax.swing.JMenu mnHelp;
    private javax.swing.JMenuItem mnObdPids;
    private javax.swing.JProgressBar pgsBrake;
    private javax.swing.JProgressBar pgsLoad;
    private javax.swing.JProgressBar pgsThrottle;
    private javax.swing.JLabel txtAltitude;
    private javax.swing.JLabel txtBearing;
    private javax.swing.JLabel txtGear;
    private javax.swing.JLabel txtLat;
    private javax.swing.JTextArea txtLog;
    private javax.swing.JLabel txtLon;
    private javax.swing.JLabel txtRPM;
    private javax.swing.JTextArea txtRequest;
    private javax.swing.JTextArea txtResponse;
    private javax.swing.JLabel txtSpeed;
    private javax.swing.JLabel txtTime;
    // End of variables declaration//GEN-END:variables

    @Override
    public int getRotation() {
        return rotation;
    }

}
