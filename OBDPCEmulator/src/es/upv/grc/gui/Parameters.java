/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.upv.grc.gui;

import es.upv.grc.obdemulator.elm.OBDCode;
import es.upv.grc.obdemulator.elm.ECUVehicle;
import es.upv.grc.obdemulator.elm.codes.GenericOBDCode;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author Usuario
 */
public class Parameters extends javax.swing.JFrame {

    ECUVehicle data;

    int selectedRow = -1;

    /**
     * Creates new form Parameters
     *
     * @param data
     */
    public Parameters(ECUVehicle data) {
        this.data = data;
        initComponents();
        tblParams.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (event.getValueIsAdjusting()) {
                    selectedRow = tblParams.getSelectedRow();
                    btnPIDActionPerformed((String) tblParams.getValueAt(selectedRow, 0));
                }
            }
        });
        updateTable();
    }

    private void updateTable() {
        (new Thread(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    try {
                        ((ParamTableModel) tblParams.getModel()).fireTableDataChanged();
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Parameters.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        })).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblParams = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtPid = new javax.swing.JTextField();
        txtResponsePid = new javax.swing.JTextField();
        txtDefaultValue = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtUnits = new javax.swing.JTextField();
        txtLongitude = new javax.swing.JTextField();
        txtMinValue = new javax.swing.JTextField();
        txtmaxValue = new javax.swing.JTextField();
        txtFormula = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtFormulaSimulation = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("OBD II PIDs");

        tblParams.setModel(new ParamTableModel()
        );
        jScrollPane1.setViewportView(tblParams);

        jLabel1.setText("PID");

        jLabel2.setText("Response ID");

        jLabel3.setText("Value");

        jLabel4.setText("Units");

        jLabel5.setText("Name");

        jLabel6.setText("Longitude");

        jLabel7.setText("Min. Value");

        jLabel8.setText("Max. Value");

        jLabel9.setText("Formula");

        txtPid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPidFocusLost(evt);
            }
        });

        txtResponsePid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResponsePidActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel10.setText("Formula Simulation");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUnits, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtDefaultValue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                        .addComponent(txtResponsePid, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPid, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtmaxValue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                        .addComponent(txtMinValue, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtLongitude, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFormula, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFormulaSimulation, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExit)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnDelete, btnSave});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtPid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtResponsePid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDefaultValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLongitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtmaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFormula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFormulaSimulation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(0, 89, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit)
                    .addComponent(btnSave)
                    .addComponent(btnCancel)
                    .addComponent(btnDelete))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    void btnPIDActionPerformed(String code) {
        selectParam(code);
    }
    
    private void selectParam(String code) {
        try {
            OBDCode cd = data.get(code);
            if (cd == null) {
                return;
            }
            txtPid.setText(code);
            txtResponsePid.setText(cd.getId());
            txtDefaultValue.setText("" + cd.getIntValue());
            txtLongitude.setText(String.valueOf(data.get(code).getLenght()));
            txtMinValue.setText("" + data.get(code).getMinValue());
            txtmaxValue.setText("" + data.get(code).getMaxValue());
            txtName.setText(data.get(code).getDescription());
            txtUnits.setText(cd.getUnits());
            txtFormula.setText("");
            txtFormulaSimulation.setText("");
            if (cd.isGeneric()) {
                txtFormula.setText(((GenericOBDCode) cd).getFormula());
                txtFormulaSimulation.setText(((GenericOBDCode) cd).getValueFormula());
            }
            unblockUI(cd.isGeneric());
        } catch (NullPointerException e) {
        }
    }

    private void clearUI() {
        txtPid.setText("");
        txtDefaultValue.setText("");
        txtLongitude.setText("");
        txtMinValue.setText("");
        txtmaxValue.setText("");
        txtName.setText("");
        txtFormula.setText("");
        txtFormulaSimulation.setText("");
        txtUnits.setText("");
        txtResponsePid.setText("");
        unblockUI(true);
        selectedRow = -1;
    }

    private void unblockUI(boolean isBlocked) {
        txtPid.setEnabled(isBlocked);
        txtLongitude.setEnabled(isBlocked);
        txtMinValue.setEnabled(isBlocked);
        txtmaxValue.setEnabled(isBlocked);
        txtName.setEnabled(isBlocked);
        txtFormula.setEnabled(isBlocked);
        txtFormulaSimulation.setEnabled(isBlocked);
        txtUnits.setEnabled(isBlocked);
        txtResponsePid.setEnabled(isBlocked);
        //btnSave.setEnabled(isBlocked);
        btnDelete.setEnabled(isBlocked);
    }

    private void txtResponsePidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResponsePidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtResponsePidActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String pid = txtPid.getText();
        OBDCode cd = data.get(pid);
        if (data.get(pid) != null && data.get(pid).isGeneric()) {
            int defValue = Integer.parseInt(txtDefaultValue.getText());
            String id = txtResponsePid.getText();
            String units = txtUnits.getText();
            String desc = txtName.getText();
            int len = Integer.parseInt(txtLongitude.getText());
            String formula = txtFormula.getText();
            String formulaSimulation = txtFormulaSimulation.getText();
            int minVal = Integer.parseInt(txtMinValue.getText());
            int maxVal = Integer.parseInt(txtmaxValue.getText());
            GenericOBDCode obdCode = new GenericOBDCode(id, defValue, units, desc, len, formula, minVal, maxVal);
            obdCode.setValueFormula(formulaSimulation);
            data.put(pid, obdCode);
        } else if (data.get(pid) != null) {
            int defValue = Integer.parseInt(txtDefaultValue.getText());
            data.get(pid).setValue(defValue);
        }
        ((ParamTableModel) tblParams.getModel()).fireTableRowsDeleted(selectedRow, selectedRow);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        clearUI();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            String pid = txtPid.getText();
            data.remove(pid);
            ((ParamTableModel) tblParams.getModel()).fireTableDataChanged();
        } catch (Exception e) {;
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void txtPidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPidFocusLost
        String code = txtPid.getText();
        selectParam(code);
    }//GEN-LAST:event_txtPidFocusLost

    class ParamTableModel extends AbstractTableModel {

        protected Vector columnIdentifiers = new Vector(6);

        Class[] types = new Class[]{
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
        };

        public ParamTableModel() {
            columnIdentifiers.add("Id");
            columnIdentifiers.add("Name");
            columnIdentifiers.add("Units");
            columnIdentifiers.add("Value");
            columnIdentifiers.add("Min. Value");
            columnIdentifiers.add("Max. Value");
        }

        @Override
        public String getColumnName(int column) {
            return (String) columnIdentifiers.get(column); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public int getRowCount() {
            return data.size();
        }

        @Override
        public int getColumnCount() {
            return 6;
        }

        public void removeRow(int indexRow) {
            fireTableRowsDeleted(indexRow, indexRow);
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            String result = "--";
            int nd = data.size();
            final String[] pids = new String[nd];
            int ii = 0;
            Iterator<String> iter = data.keySet().iterator();
            while (iter.hasNext()) {
                String code = iter.next();
                pids[ii] = code;
                ii++;
            }
            try {
                String pid = pids[rowIndex];
                switch (columnIndex) {
                    case 0:
                        result = pid;
                        break;
                    case 1:
                        result = data.get(pid).getDescription();
                        break;
                    case 2:
                        result = data.get(pid).getUnits();
                        break;
                    case 3:
                        result = String.valueOf(data.get(pid).getIntValue());
                        break;
                    case 4:
                        result = String.valueOf(data.get(pid).getMinValue());
                        break;
                    case 5:
                        result = String.valueOf(data.get(pid).getMaxValue());
                        break;
                    default:
                        break;
                }
                return result;
            } catch (Exception e) {
                return "--";
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblParams;
    private javax.swing.JTextField txtDefaultValue;
    private javax.swing.JTextField txtFormula;
    private javax.swing.JTextField txtFormulaSimulation;
    private javax.swing.JTextField txtLongitude;
    private javax.swing.JTextField txtMinValue;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPid;
    private javax.swing.JTextField txtResponsePid;
    private javax.swing.JTextField txtUnits;
    private javax.swing.JTextField txtmaxValue;
    // End of variables declaration//GEN-END:variables

}
